#!/bin/bash

STACK_NAME="LabVPC"
TEMPLATE_FILE="vpc.yaml"

echo "üöÄ B·∫Øt ƒë·∫ßu t·∫°o VPC Stack: $STACK_NAME..."
aws cloudformation create-stack --stack-name "$STACK_NAME" \
    --template-body "file://$TEMPLATE_FILE" \
    --capabilities CAPABILITY_NAMED_IAM

echo "üîπ ƒêang ƒë·ª£i Stack $STACK_NAME ho√†n th√†nh..."

# H√†m ki·ªÉm tra tr·∫°ng th√°i Stack
function monitor_stack() {
    while true; do
        STACK_STATUS=$(aws cloudformation describe-stacks --stack-name "$STACK_NAME" \
            --query "Stacks[0].StackStatus" --output text 2>/dev/null)

        if [[ -z "$STACK_STATUS" ]]; then
            echo "‚ùå Kh√¥ng th·ªÉ l·∫•y tr·∫°ng th√°i stack. Ki·ªÉm tra l·∫°i AWS CLI."
            exit 1
        fi

        case "$STACK_STATUS" in
            CREATE_IN_PROGRESS)
                echo "‚è≥ Stack ƒëang ƒë∆∞·ª£c t·∫°o... [CREATE_IN_PROGRESS]"
                ;;
            CREATE_COMPLETE)
                echo "‚úÖ Stack $STACK_NAME ƒë√£ ƒë∆∞·ª£c t·∫°o th√†nh c√¥ng!"
                return
                ;;
            CREATE_FAILED)
                echo "‚ùå Stack $STACK_NAME g·∫∑p l·ªói khi t·∫°o!"
                exit 1
                ;;
            ROLLBACK_IN_PROGRESS|ROLLBACK_COMPLETE)
                echo "‚ö†Ô∏è Stack b·ªã rollback. Ki·ªÉm tra CloudFormation logs!"
                exit 1
                ;;
            *)
                echo "‚ö†Ô∏è Tr·∫°ng th√°i kh√¥ng x√°c ƒë·ªãnh: $STACK_STATUS"
                exit 1
                ;;
        esac

        sleep 10  # Ki·ªÉm tra l·∫°i sau 10 gi√¢y
    done
}

# G·ªçi h√†m monitor stack
monitor_stack

echo "üéâ Qu√° tr√¨nh t·∫°o VPC ho√†n t·∫•t!"
