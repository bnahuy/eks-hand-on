#!/bin/bash

STACK_NAME="LabVPC"
TEMPLATE_FILE="vpc.yaml"

echo "üöÄ B·∫Øt ƒë·∫ßu t·∫°o VPC Stack: $STACK_NAME..."
aws cloudformation create-stack --stack-name "$STACK_NAME" \
    --template-body "file://$TEMPLATE_FILE" \
    --capabilities CAPABILITY_NAMED_IAM

echo "üîπ ƒêang ƒë·ª£i Stack $STACK_NAME ho√†n th√†nh..."

# Bi·∫øn theo d√µi th·ªùi gian
TOTAL_TIME=0
LAST_STATUS=""

# H√†m theo d√µi tr·∫°ng th√°i stack
function monitor_stack() {
    local start_time=$(date +%s.%N)  # L∆∞u th·ªùi gian b·∫Øt ƒë·∫ßu

    while true; do
        STACK_STATUS=$(aws cloudformation describe-stacks --stack-name "$STACK_NAME" \
            --query "Stacks[0].StackStatus" --output text 2>/dev/null)

        if [[ -z "$STACK_STATUS" ]]; then
            echo "‚ùå Kh√¥ng th·ªÉ l·∫•y tr·∫°ng th√°i stack. Ki·ªÉm tra l·∫°i AWS CLI."
            exit 1
        fi

        if [[ "$STACK_STATUS" != "$LAST_STATUS" ]]; then
            # N·∫øu tr·∫°ng th√°i thay ƒë·ªïi, t√≠nh t·ªïng th·ªùi gian tr·∫°ng th√°i tr∆∞·ªõc ƒë√≥
            local now_time=$(date +%s.%N)
            local duration=$(echo "$now_time - $start_time" | bc)
            TOTAL_TIME=$(echo "$TOTAL_TIME + $duration" | bc)

            echo "üîÑ Tr·∫°ng th√°i thay ƒë·ªïi: $LAST_STATUS ‚Üí $STACK_STATUS (‚è±Ô∏è $(printf "%.2f" "$duration") gi√¢y)"

            # Reset th·ªùi gian b·∫Øt ƒë·∫ßu
            start_time=$(date +%s.%N)
            LAST_STATUS="$STACK_STATUS"
        fi

        case "$STACK_STATUS" in
            CREATE_IN_PROGRESS)
                local now_time=$(date +%s.%N)
                local elapsed=$(echo "$now_time - $start_time" | bc)
                echo -ne "\r‚è≥ Stack ƒëang ƒë∆∞·ª£c t·∫°o... [CREATE_IN_PROGRESS] (‚è±Ô∏è $(printf "%.2f" "$elapsed") gi√¢y)   "
                ;;
            CREATE_COMPLETE)
                local now_time=$(date +%s.%N)
                local duration=$(echo "$now_time - $start_time" | bc)
                TOTAL_TIME=$(echo "$TOTAL_TIME + $duration" | bc)
                echo -e "\n‚úÖ Stack $STACK_NAME ƒë√£ ƒë∆∞·ª£c t·∫°o th√†nh c√¥ng! (‚è±Ô∏è $(printf "%.2f" "$duration") gi√¢y)"
                return
                ;;
            CREATE_FAILED)
                local now_time=$(date +%s.%N)
                local duration=$(echo "$now_time - $start_time" | bc)
                TOTAL_TIME=$(echo "$TOTAL_TIME + $duration" | bc)
                echo -e "\n‚ùå Stack $STACK_NAME g·∫∑p l·ªói khi t·∫°o! (‚è±Ô∏è $(printf "%.2f" "$duration") gi√¢y)"
                exit 1
                ;;
            ROLLBACK_IN_PROGRESS|ROLLBACK_COMPLETE)
                local now_time=$(date +%s.%N)
                local duration=$(echo "$now_time - $start_time" | bc)
                TOTAL_TIME=$(echo "$TOTAL_TIME + $duration" | bc)
                echo -e "\n‚ö†Ô∏è Stack b·ªã rollback. Ki·ªÉm tra CloudFormation logs! (‚è±Ô∏è $(printf "%.2f" "$duration") gi√¢y)"
                exit 1
                ;;
            *)
                local now_time=$(date +%s.%N)
                local duration=$(echo "$now_time - $start_time" | bc)
                TOTAL_TIME=$(echo "$TOTAL_TIME + $duration" | bc)
                echo -e "\n‚ö†Ô∏è Tr·∫°ng th√°i kh√¥ng x√°c ƒë·ªãnh: $STACK_STATUS (‚è±Ô∏è $(printf "%.2f" "$duration") gi√¢y)"
                exit 1
                ;;
        esac

        sleep 1  # C·∫≠p nh·∫≠t m·ªói gi√¢y
    done
}

# G·ªçi h√†m theo d√µi stack
monitor_stack

echo -e "\nüéâ Qu√° tr√¨nh t·∫°o VPC ho√†n t·∫•t sau $(printf "%.2f" "$TOTAL_TIME") gi√¢y!"
